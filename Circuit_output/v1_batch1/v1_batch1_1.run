numprocs=4

Reading command line arguments using syntax: python file.py [simConfig=filepath] [netParams=filepath]
Importing simConfig from Circuit_output/v1_batch1/v1_batch1_1_cfg.json
Loading file Circuit_output/v1_batch1/v1_batch1_1_cfg.json ... 
Loading simConfig...
Importing netParams from Circuit_output/v1_batch1/v1_batch1_netParams.py
NeuronTemplate_HL23PYR[0]
NeuronTemplate_HL23SST[0]
NeuronTemplate_HL23PV[0]
NeuronTemplate_HL23VIP[0]
old -> HL23PYR all myelin_0
new -> HL23PYR all axon_2
old -> HL23PYR axonal myelin_0
new -> HL23PYR axonal axon_2
old -> HL23SST all myelin_0
new -> HL23SST all axon_2
old -> HL23SST axonal myelin_0
new -> HL23SST axonal axon_2
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29']
['apic_0', 'apic_1', 'apic_2', 'apic_3', 'apic_4', 'apic_5', 'apic_6', 'apic_7', 'apic_8', 'apic_9', 'apic_10', 'apic_11', 'apic_12', 'apic_13', 'apic_14', 'apic_15', 'apic_16', 'apic_17', 'apic_18', 'apic_19', 'apic_20', 'apic_21', 'apic_22', 'apic_23', 'apic_24', 'apic_25', 'apic_26', 'apic_27', 'apic_28', 'apic_29', 'apic_30', 'apic_31', 'apic_32', 'apic_33', 'apic_34', 'apic_35', 'apic_36', 'apic_37', 'apic_38', 'apic_39', 'apic_40', 'apic_41', 'apic_42', 'apic_43', 'apic_44', 'apic_45', 'apic_46', 'apic_47', 'apic_48', 'apic_49', 'apic_50', 'apic_51', 'apic_52', 'apic_53', 'apic_54', 'apic_55', 'apic_56', 'apic_57']
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'apic_0', 'apic_1', 'apic_2', 'apic_3', 'apic_4', 'apic_5', 'apic_6', 'apic_7', 'apic_8', 'apic_9', 'apic_10', 'apic_11', 'apic_12', 'apic_13', 'apic_14', 'apic_15', 'apic_16', 'apic_17', 'apic_18', 'apic_19', 'apic_20', 'apic_21', 'apic_22', 'apic_23', 'apic_24', 'apic_25', 'apic_26', 'apic_27', 'apic_28', 'apic_29', 'apic_30', 'apic_31', 'apic_32', 'apic_33', 'apic_34', 'apic_35', 'apic_36', 'apic_37', 'apic_38', 'apic_39', 'apic_40', 'apic_41', 'apic_42', 'apic_43', 'apic_44', 'apic_45', 'apic_46', 'apic_47', 'apic_48', 'apic_49', 'apic_50', 'apic_51', 'apic_52', 'apic_53', 'apic_54', 'apic_55', 'apic_56', 'apic_57']
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52', 'dend_53', 'dend_54']
[]
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52', 'dend_53', 'dend_54']
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48']
[]
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48']
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52']
[]
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52']
[-1025.0, -1740.0, -2250.0] [-1975.0, -2120.0, -2950.0] [475.0, 190.0, 350.0] ['apic', 'dend'] {'radius': 250, 'loc': -1025.0, 'scale': 1900.0, 'cap': 475.0} 



 HL23PYRHL23PYR 3 0.15 0 ['apic', 'dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 670, 'Fac': 17, 'Use': 0.46}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23PYR'}, 'probability': 0.15, 'weight': 0.0002482, 'delay': 0.5, 'synMech': 'HL23PYRHL23PYR', 'synsPerConn': 3, 'sec': 'spiny'}
spiny

 HL23PYRHL23SST 8 0.19 2 ['dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 140, 'Fac': 670, 'Use': 0.09}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.19, 'weight': 0.00038, 'delay': 0.5, 'synMech': 'HL23PYRHL23SST', 'synsPerConn': 8, 'sec': 'basal'}
basal

 HL23PYRHL23PV 8 0.09 2 ['dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 510, 'Fac': 180, 'Use': 0.88}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.09, 'weight': 0.000337, 'delay': 0.5, 'synMech': 'HL23PYRHL23PV', 'synsPerConn': 8, 'sec': 'basal'}
basal

 HL23PYRHL23VIP 4 0.09 2 ['dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 670, 'Fac': 17, 'Use': 0.5}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.09, 'weight': 0.00031, 'delay': 0.5, 'synMech': 'HL23PYRHL23VIP', 'synsPerConn': 4, 'sec': 'basal'}
basal

 HL23SSTHL23PYR 12 0.19 1 ['apic']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 1300, 'Fac': 2, 'Use': 0.3}

Reading command line arguments using syntax: python file.py [simConfig=filepath] [netParams=filepath]
Importing simConfig from Circuit_output/v1_batch1/v1_batch1_1_cfg.json
Loading file Circuit_output/v1_batch1/v1_batch1_1_cfg.json ... 
Loading simConfig...
Importing netParams from Circuit_output/v1_batch1/v1_batch1_netParams.py
NeuronTemplate_HL23PYR[0]
NeuronTemplate_HL23SST[0]
NeuronTemplate_HL23PV[0]
NeuronTemplate_HL23VIP[0]
old -> HL23PYR all myelin_0
new -> HL23PYR all axon_2
old -> HL23PYR axonal myelin_0
new -> HL23PYR axonal axon_2
old -> HL23SST all myelin_0
new -> HL23SST all axon_2
old -> HL23SST axonal myelin_0
new -> HL23SST axonal axon_2
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29']
['apic_0', 'apic_1', 'apic_2', 'apic_3', 'apic_4', 'apic_5', 'apic_6', 'apic_7', 'apic_8', 'apic_9', 'apic_10', 'apic_11', 'apic_12', 'apic_13', 'apic_14', 'apic_15', 'apic_16', 'apic_17', 'apic_18', 'apic_19', 'apic_20', 'apic_21', 'apic_22', 'apic_23', 'apic_24', 'apic_25', 'apic_26', 'apic_27', 'apic_28', 'apic_29', 'apic_30', 'apic_31', 'apic_32', 'apic_33', 'apic_34', 'apic_35', 'apic_36', 'apic_37', 'apic_38', 'apic_39', 'apic_40', 'apic_41', 'apic_42', 'apic_43', 'apic_44', 'apic_45', 'apic_46', 'apic_47', 'apic_48', 'apic_49', 'apic_50', 'apic_51', 'apic_52', 'apic_53', 'apic_54', 'apic_55', 'apic_56', 'apic_57']
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'apic_0', 'apic_1', 'apic_2', 'apic_3', 'apic_4', 'apic_5', 'apic_6', 'apic_7', 'apic_8', 'apic_9', 'apic_10', 'apic_11', 'apic_12', 'apic_13', 'apic_14', 'apic_15', 'apic_16', 'apic_17', 'apic_18', 'apic_19', 'apic_20', 'apic_21', 'apic_22', 'apic_23', 'apic_24', 'apic_25', 'apic_26', 'apic_27', 'apic_28', 'apic_29', 'apic_30', 'apic_31', 'apic_32', 'apic_33', 'apic_34', 'apic_35', 'apic_36', 'apic_37', 'apic_38', 'apic_39', 'apic_40', 'apic_41', 'apic_42', 'apic_43', 'apic_44', 'apic_45', 'apic_46', 'apic_47', 'apic_48', 'apic_49', 'apic_50', 'apic_51', 'apic_52', 'apic_53', 'apic_54', 'apic_55', 'apic_56', 'apic_57']
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52', 'dend_53', 'dend_54']
[]
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52', 'dend_53', 'dend_54']
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48']
[]
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48']
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52']
[]
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52']
[-1025.0, -1740.0, -2250.0] [-1975.0, -2120.0, -2950.0] [475.0, 190.0, 350.0] ['apic', 'dend'] {'radius': 250, 'loc': -1025.0, 'scale': 1900.0, 'cap': 475.0} 



 HL23PYRHL23PYR 3 0.15 0 ['apic', 'dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 670, 'Fac': 17, 'Use': 0.46}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23PYR'}, 'probability': 0.15, 'weight': 0.0002482, 'delay': 0.5, 'synMech': 'HL23PYRHL23PYR', 'synsPerConn': 3, 'sec': 'spiny'}
spiny

 HL23PYRHL23SST 8 0.19 2 ['dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 140, 'Fac': 670, 'Use': 0.09}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.19, 'weight': 0.00038, 'delay': 0.5, 'synMech': 'HL23PYRHL23SST', 'synsPerConn': 8, 'sec': 'basal'}
basal

 HL23PYRHL23PV 8 0.09 2 ['dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 510, 'Fac': 180, 'Use': 0.88}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.09, 'weight': 0.000337, 'delay': 0.5, 'synMech': 'HL23PYRHL23PV', 'synsPerConn': 8, 'sec': 'basal'}
basal

 HL23PYRHL23VIP 4 0.09 2 ['dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 670, 'Fac': 17, 'Use': 0.5}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.09, 'weight': 0.00031, 'delay': 0.5, 'synMech': 'HL23PYRHL23VIP', 'synsPerConn': 4, 'sec': 'basal'}
basal

 HL23SSTHL23PYR 12 0.19 1 ['apic']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 1300, 'Fac': 2, 'Use': 0.3}

Reading command line arguments using syntax: python file.py [simConfig=filepath] [netParams=filepath]
Importing simConfig from Circuit_output/v1_batch1/v1_batch1_1_cfg.json
Loading file Circuit_output/v1_batch1/v1_batch1_1_cfg.json ... 
Loading simConfig...
Importing netParams from Circuit_output/v1_batch1/v1_batch1_netParams.py
NeuronTemplate_HL23PYR[0]
NeuronTemplate_HL23SST[0]
NeuronTemplate_HL23PV[0]
NeuronTemplate_HL23VIP[0]
old -> HL23PYR all myelin_0
new -> HL23PYR all axon_2
old -> HL23PYR axonal myelin_0
new -> HL23PYR axonal axon_2
old -> HL23SST all myelin_0
new -> HL23SST all axon_2
old -> HL23SST axonal myelin_0
new -> HL23SST axonal axon_2
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29']
['apic_0', 'apic_1', 'apic_2', 'apic_3', 'apic_4', 'apic_5', 'apic_6', 'apic_7', 'apic_8', 'apic_9', 'apic_10', 'apic_11', 'apic_12', 'apic_13', 'apic_14', 'apic_15', 'apic_16', 'apic_17', 'apic_18', 'apic_19', 'apic_20', 'apic_21', 'apic_22', 'apic_23', 'apic_24', 'apic_25', 'apic_26', 'apic_27', 'apic_28', 'apic_29', 'apic_30', 'apic_31', 'apic_32', 'apic_33', 'apic_34', 'apic_35', 'apic_36', 'apic_37', 'apic_38', 'apic_39', 'apic_40', 'apic_41', 'apic_42', 'apic_43', 'apic_44', 'apic_45', 'apic_46', 'apic_47', 'apic_48', 'apic_49', 'apic_50', 'apic_51', 'apic_52', 'apic_53', 'apic_54', 'apic_55', 'apic_56', 'apic_57']
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'apic_0', 'apic_1', 'apic_2', 'apic_3', 'apic_4', 'apic_5', 'apic_6', 'apic_7', 'apic_8', 'apic_9', 'apic_10', 'apic_11', 'apic_12', 'apic_13', 'apic_14', 'apic_15', 'apic_16', 'apic_17', 'apic_18', 'apic_19', 'apic_20', 'apic_21', 'apic_22', 'apic_23', 'apic_24', 'apic_25', 'apic_26', 'apic_27', 'apic_28', 'apic_29', 'apic_30', 'apic_31', 'apic_32', 'apic_33', 'apic_34', 'apic_35', 'apic_36', 'apic_37', 'apic_38', 'apic_39', 'apic_40', 'apic_41', 'apic_42', 'apic_43', 'apic_44', 'apic_45', 'apic_46', 'apic_47', 'apic_48', 'apic_49', 'apic_50', 'apic_51', 'apic_52', 'apic_53', 'apic_54', 'apic_55', 'apic_56', 'apic_57']
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52', 'dend_53', 'dend_54']
[]
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52', 'dend_53', 'dend_54']
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48']
[]
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48']
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52']
[]
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52']
[-1025.0, -1740.0, -2250.0] [-1975.0, -2120.0, -2950.0] [475.0, 190.0, 350.0] ['apic', 'dend'] {'radius': 250, 'loc': -1025.0, 'scale': 1900.0, 'cap': 475.0} 



 HL23PYRHL23PYR 3 0.15 0 ['apic', 'dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 670, 'Fac': 17, 'Use': 0.46}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23PYR'}, 'probability': 0.15, 'weight': 0.0002482, 'delay': 0.5, 'synMech': 'HL23PYRHL23PYR', 'synsPerConn': 3, 'sec': 'spiny'}
spiny

 HL23PYRHL23SST 8 0.19 2 ['dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 140, 'Fac': 670, 'Use': 0.09}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.19, 'weight': 0.00038, 'delay': 0.5, 'synMech': 'HL23PYRHL23SST', 'synsPerConn': 8, 'sec': 'basal'}
basal

 HL23PYRHL23PV 8 0.09 2 ['dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 510, 'Fac': 180, 'Use': 0.88}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.09, 'weight': 0.000337, 'delay': 0.5, 'synMech': 'HL23PYRHL23PV', 'synsPerConn': 8, 'sec': 'basal'}
basal

 HL23PYRHL23VIP 4 0.09 2 ['dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 670, 'Fac': 17, 'Use': 0.5}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.09, 'weight': 0.00031, 'delay': 0.5, 'synMech': 'HL23PYRHL23VIP', 'synsPerConn': 4, 'sec': 'basal'}
basal

 HL23SSTHL23PYR 12 0.19 1 ['apic']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 1300, 'Fac': 2, 'Use': 0.3}

Reading command line arguments using syntax: python file.py [simConfig=filepath] [netParams=filepath]
Importing simConfig from Circuit_output/v1_batch1/v1_batch1_1_cfg.json
Loading file Circuit_output/v1_batch1/v1_batch1_1_cfg.json ... 
Loading simConfig...
Importing netParams from Circuit_output/v1_batch1/v1_batch1_netParams.py
NeuronTemplate_HL23PYR[0]
NeuronTemplate_HL23SST[0]
NeuronTemplate_HL23PV[0]
NeuronTemplate_HL23VIP[0]
old -> HL23PYR all myelin_0
new -> HL23PYR all axon_2
old -> HL23PYR axonal myelin_0
new -> HL23PYR axonal axon_2
old -> HL23SST all myelin_0
new -> HL23SST all axon_2
old -> HL23SST axonal myelin_0
new -> HL23SST axonal axon_2
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29']
['apic_0', 'apic_1', 'apic_2', 'apic_3', 'apic_4', 'apic_5', 'apic_6', 'apic_7', 'apic_8', 'apic_9', 'apic_10', 'apic_11', 'apic_12', 'apic_13', 'apic_14', 'apic_15', 'apic_16', 'apic_17', 'apic_18', 'apic_19', 'apic_20', 'apic_21', 'apic_22', 'apic_23', 'apic_24', 'apic_25', 'apic_26', 'apic_27', 'apic_28', 'apic_29', 'apic_30', 'apic_31', 'apic_32', 'apic_33', 'apic_34', 'apic_35', 'apic_36', 'apic_37', 'apic_38', 'apic_39', 'apic_40', 'apic_41', 'apic_42', 'apic_43', 'apic_44', 'apic_45', 'apic_46', 'apic_47', 'apic_48', 'apic_49', 'apic_50', 'apic_51', 'apic_52', 'apic_53', 'apic_54', 'apic_55', 'apic_56', 'apic_57']
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'apic_0', 'apic_1', 'apic_2', 'apic_3', 'apic_4', 'apic_5', 'apic_6', 'apic_7', 'apic_8', 'apic_9', 'apic_10', 'apic_11', 'apic_12', 'apic_13', 'apic_14', 'apic_15', 'apic_16', 'apic_17', 'apic_18', 'apic_19', 'apic_20', 'apic_21', 'apic_22', 'apic_23', 'apic_24', 'apic_25', 'apic_26', 'apic_27', 'apic_28', 'apic_29', 'apic_30', 'apic_31', 'apic_32', 'apic_33', 'apic_34', 'apic_35', 'apic_36', 'apic_37', 'apic_38', 'apic_39', 'apic_40', 'apic_41', 'apic_42', 'apic_43', 'apic_44', 'apic_45', 'apic_46', 'apic_47', 'apic_48', 'apic_49', 'apic_50', 'apic_51', 'apic_52', 'apic_53', 'apic_54', 'apic_55', 'apic_56', 'apic_57']
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52', 'dend_53', 'dend_54']
[]
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52', 'dend_53', 'dend_54']
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48']
[]
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48']
dict_keys(['SectionList[0]', 'SectionList[1]', 'all', 'somatic', 'basal', 'apical', 'axonal'])
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52']
[]
['dend_0', 'dend_1', 'dend_2', 'dend_3', 'dend_4', 'dend_5', 'dend_6', 'dend_7', 'dend_8', 'dend_9', 'dend_10', 'dend_11', 'dend_12', 'dend_13', 'dend_14', 'dend_15', 'dend_16', 'dend_17', 'dend_18', 'dend_19', 'dend_20', 'dend_21', 'dend_22', 'dend_23', 'dend_24', 'dend_25', 'dend_26', 'dend_27', 'dend_28', 'dend_29', 'dend_30', 'dend_31', 'dend_32', 'dend_33', 'dend_34', 'dend_35', 'dend_36', 'dend_37', 'dend_38', 'dend_39', 'dend_40', 'dend_41', 'dend_42', 'dend_43', 'dend_44', 'dend_45', 'dend_46', 'dend_47', 'dend_48', 'dend_49', 'dend_50', 'dend_51', 'dend_52']
[-1025.0, -1740.0, -2250.0] [-1975.0, -2120.0, -2950.0] [475.0, 190.0, 350.0] ['apic', 'dend'] {'radius': 250, 'loc': -1025.0, 'scale': 1900.0, 'cap': 475.0} 



 HL23PYRHL23PYR 3 0.15 0 ['apic', 'dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 670, 'Fac': 17, 'Use': 0.46}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23PYR'}, 'probability': 0.15, 'weight': 0.0002482, 'delay': 0.5, 'synMech': 'HL23PYRHL23PYR', 'synsPerConn': 3, 'sec': 'spiny'}
spiny

 HL23PYRHL23SST 8 0.19 2 ['dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 140, 'Fac': 670, 'Use': 0.09}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.19, 'weight': 0.00038, 'delay': 0.5, 'synMech': 'HL23PYRHL23SST', 'synsPerConn': 8, 'sec': 'basal'}
basal

 HL23PYRHL23PV 8 0.09 2 ['dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 510, 'Fac': 180, 'Use': 0.88}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.09, 'weight': 0.000337, 'delay': 0.5, 'synMech': 'HL23PYRHL23PV', 'synsPerConn': 8, 'sec': 'basal'}
basal

 HL23PYRHL23VIP 4 0.09 2 ['dend']
{'mod': 'ProbAMPANMDA_EMS', 'tau_r_AMPA': 0.3, 'tau_d_AMPA': 3.0, 'tau_r_NMDA': 2.0, 'tau_d_NMDA': 65.0, 'Dep': 670, 'Fac': 17, 'Use': 0.5}
{'preConds': {'cellType': 'HL23PYR'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.09, 'weight': 0.00031, 'delay': 0.5, 'synMech': 'HL23PYRHL23VIP', 'synsPerConn': 4, 'sec': 'basal'}
basal

 HL23SSTHL23PYR 12 0.19 1 ['apic']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 1300, 'Fac': 2, 'Use': 0.3}
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23PYR'}, 'probability': 0.19, 'weight': 0.00124, 'delay': 0.5, 'synMech': 'HL23SSTHL23PYR', 'synsPerConn': 12, 'sec': 'apical'}
apical

 HL23SSTHL23SST 12 0.04 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.04, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23SSTHL23SST', 'synsPerConn': 12, 'sec': 'basal'}
basal

 HL23SSTHL23PV 13 0.2 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 710, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.2, 'weight': 0.00033, 'delay': 0.5, 'synMech': 'HL23SSTHL23PV', 'synsPerConn': 13, 'sec': 'basal'}
basal

 HL23SSTHL23VIP 5 0.06 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 890, 'Fac': 25, 'Use': 0.31}
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.06, 'weight': 0.00046, 'delay': 0.5, 'synMech': 'HL23SSTHL23VIP', 'synsPerConn': 5, 'sec': 'basal'}
basal

 HL23PVHL23PYR 17 0.094 3 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 710, 'Fac': 23, 'Use': 0.08}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23PYR'}, 'probability': 0.094, 'weight': 0.00291, 'delay': 0.5, 'synMech': 'HL23PVHL23PYR', 'synsPerConn': 17, 'sec': 'basal'}
basal

 HL23PVHL23SST 16 0.05 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 700, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.05, 'weight': 0.00033, 'delay': 0.5, 'synMech': 'HL23PVHL23SST', 'synsPerConn': 16, 'sec': 'basal'}
basal

 HL23PVHL23PV 15 0.37 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 710, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.37, 'weight': 0.00033, 'delay': 0.5, 'synMech': 'HL23PVHL23PV', 'synsPerConn': 15, 'sec': 'basal'}
basal

 HL23PVHL23VIP 7 0.03 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.26}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.03, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23PVHL23VIP', 'synsPerConn': 7, 'sec': 'basal'}
basal

 HL23VIPHL23SST 9 0.35 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 760, 'Fac': 22, 'Use': 0.27}
{'preConds': {'cellType': 'HL23VIP'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.35, 'weight': 0.00036, 'delay': 0.5, 'synMech': 'HL23VIPHL23SST', 'synsPerConn': 9, 'sec': 'basal'}
basal

 HL23VIPHL23PV 11 0.1 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23VIP'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.1, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23VIPHL23PV', 'synsPerConn': 11, 'sec': 'basal'}
basal

 HL23VIPHL23VIP 7 0.05 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.26}
{'preConds': {'cellType': 'HL23VIP'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.05, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23VIPHL23VIP', 'synsPerConn': 7, 'sec': 'basal'}
basal
  Number of cells on node 1: 1 
  Number of connections on node 1: 1 
  Number of synaptic contacts on node 1: 9 
  Number of stims on node 1: 5 
Recording 1 traces of 1 types on node 1

 {'cellType': 'HL23SST', 'cellModel': 'HH_full', 'pop': 'HL23SST', 'xnorm': 0.80225897938126, 'ynorm': 0.32775052121942183, 'znorm': 0.10644638304556076, 'x': 200.564744845315, 'y': 1081.576720024092, 'z': 26.611595761390188} nsec = 59
Warning: data won't be saved. No output format specified (consider sim.cfg.savePickle, sim.cfg.saveJson etc.)
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23PYR'}, 'probability': 0.19, 'weight': 0.00124, 'delay': 0.5, 'synMech': 'HL23SSTHL23PYR', 'synsPerConn': 12, 'sec': 'apical'}
apical

 HL23SSTHL23SST 12 0.04 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.04, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23SSTHL23SST', 'synsPerConn': 12, 'sec': 'basal'}
basal

 HL23SSTHL23PV 13 0.2 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 710, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.2, 'weight': 0.00033, 'delay': 0.5, 'synMech': 'HL23SSTHL23PV', 'synsPerConn': 13, 'sec': 'basal'}
basal

 HL23SSTHL23VIP 5 0.06 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 890, 'Fac': 25, 'Use': 0.31}
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.06, 'weight': 0.00046, 'delay': 0.5, 'synMech': 'HL23SSTHL23VIP', 'synsPerConn': 5, 'sec': 'basal'}
basal

 HL23PVHL23PYR 17 0.094 3 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 710, 'Fac': 23, 'Use': 0.08}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23PYR'}, 'probability': 0.094, 'weight': 0.00291, 'delay': 0.5, 'synMech': 'HL23PVHL23PYR', 'synsPerConn': 17, 'sec': 'basal'}
basal

 HL23PVHL23SST 16 0.05 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 700, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.05, 'weight': 0.00033, 'delay': 0.5, 'synMech': 'HL23PVHL23SST', 'synsPerConn': 16, 'sec': 'basal'}
basal

 HL23PVHL23PV 15 0.37 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 710, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.37, 'weight': 0.00033, 'delay': 0.5, 'synMech': 'HL23PVHL23PV', 'synsPerConn': 15, 'sec': 'basal'}
basal

 HL23PVHL23VIP 7 0.03 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.26}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.03, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23PVHL23VIP', 'synsPerConn': 7, 'sec': 'basal'}
basal

 HL23VIPHL23SST 9 0.35 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 760, 'Fac': 22, 'Use': 0.27}
{'preConds': {'cellType': 'HL23VIP'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.35, 'weight': 0.00036, 'delay': 0.5, 'synMech': 'HL23VIPHL23SST', 'synsPerConn': 9, 'sec': 'basal'}
basal

 HL23VIPHL23PV 11 0.1 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23VIP'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.1, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23VIPHL23PV', 'synsPerConn': 11, 'sec': 'basal'}
basal

 HL23VIPHL23VIP 7 0.05 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.26}
{'preConds': {'cellType': 'HL23VIP'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.05, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23VIPHL23VIP', 'synsPerConn': 7, 'sec': 'basal'}
basal
  Number of cells on node 3: 1 
  Number of connections on node 3: 0 
  Number of stims on node 3: 5 
Recording 1 traces of 1 types on node 3

 {'cellType': 'HL23VIP', 'cellModel': 'HH_full', 'pop': 'HL23VIP', 'xnorm': 0.4594527259586399, 'ynorm': 0.34080768370064873, 'znorm': 0.8929340638393198, 'x': 114.86318148965998, 'y': 1124.6653562121408, 'z': 223.23351595982996} nsec = 56
Warning: data won't be saved. No output format specified (consider sim.cfg.savePickle, sim.cfg.saveJson etc.)
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23PYR'}, 'probability': 0.19, 'weight': 0.00124, 'delay': 0.5, 'synMech': 'HL23SSTHL23PYR', 'synsPerConn': 12, 'sec': 'apical'}
apical

 HL23SSTHL23SST 12 0.04 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.04, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23SSTHL23SST', 'synsPerConn': 12, 'sec': 'basal'}
basal

 HL23SSTHL23PV 13 0.2 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 710, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.2, 'weight': 0.00033, 'delay': 0.5, 'synMech': 'HL23SSTHL23PV', 'synsPerConn': 13, 'sec': 'basal'}
basal

 HL23SSTHL23VIP 5 0.06 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 890, 'Fac': 25, 'Use': 0.31}
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.06, 'weight': 0.00046, 'delay': 0.5, 'synMech': 'HL23SSTHL23VIP', 'synsPerConn': 5, 'sec': 'basal'}
basal

 HL23PVHL23PYR 17 0.094 3 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 710, 'Fac': 23, 'Use': 0.08}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23PYR'}, 'probability': 0.094, 'weight': 0.00291, 'delay': 0.5, 'synMech': 'HL23PVHL23PYR', 'synsPerConn': 17, 'sec': 'basal'}
basal

 HL23PVHL23SST 16 0.05 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 700, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.05, 'weight': 0.00033, 'delay': 0.5, 'synMech': 'HL23PVHL23SST', 'synsPerConn': 16, 'sec': 'basal'}
basal

 HL23PVHL23PV 15 0.37 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 710, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.37, 'weight': 0.00033, 'delay': 0.5, 'synMech': 'HL23PVHL23PV', 'synsPerConn': 15, 'sec': 'basal'}
basal

 HL23PVHL23VIP 7 0.03 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.26}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.03, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23PVHL23VIP', 'synsPerConn': 7, 'sec': 'basal'}
basal

 HL23VIPHL23SST 9 0.35 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 760, 'Fac': 22, 'Use': 0.27}
{'preConds': {'cellType': 'HL23VIP'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.35, 'weight': 0.00036, 'delay': 0.5, 'synMech': 'HL23VIPHL23SST', 'synsPerConn': 9, 'sec': 'basal'}
basal

 HL23VIPHL23PV 11 0.1 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23VIP'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.1, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23VIPHL23PV', 'synsPerConn': 11, 'sec': 'basal'}
basal

 HL23VIPHL23VIP 7 0.05 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.26}
{'preConds': {'cellType': 'HL23VIP'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.05, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23VIPHL23VIP', 'synsPerConn': 7, 'sec': 'basal'}
basal
  Number of cells on node 2: 1 
  Number of connections on node 2: 0 
  Number of stims on node 2: 5 
Recording 1 traces of 1 types on node 2

 {'cellType': 'HL23PV', 'cellModel': 'HH_full', 'pop': 'HL23PV', 'xnorm': 0.7828228870332057, 'ynorm': 0.33974036488843296, 'znorm': 0.2562375803977795, 'x': 195.70572175830142, 'y': 1121.1432041318287, 'z': 64.05939509944487} nsec = 52
Warning: data won't be saved. No output format specified (consider sim.cfg.savePickle, sim.cfg.saveJson etc.)
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23PYR'}, 'probability': 0.19, 'weight': 0.00124, 'delay': 0.5, 'synMech': 'HL23SSTHL23PYR', 'synsPerConn': 12, 'sec': 'apical'}
apical

 HL23SSTHL23SST 12 0.04 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.04, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23SSTHL23SST', 'synsPerConn': 12, 'sec': 'basal'}
basal

 HL23SSTHL23PV 13 0.2 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 710, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.2, 'weight': 0.00033, 'delay': 0.5, 'synMech': 'HL23SSTHL23PV', 'synsPerConn': 13, 'sec': 'basal'}
basal

 HL23SSTHL23VIP 5 0.06 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 890, 'Fac': 25, 'Use': 0.31}
{'preConds': {'cellType': 'HL23SST'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.06, 'weight': 0.00046, 'delay': 0.5, 'synMech': 'HL23SSTHL23VIP', 'synsPerConn': 5, 'sec': 'basal'}
basal

 HL23PVHL23PYR 17 0.094 3 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 710, 'Fac': 23, 'Use': 0.08}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23PYR'}, 'probability': 0.094, 'weight': 0.00291, 'delay': 0.5, 'synMech': 'HL23PVHL23PYR', 'synsPerConn': 17, 'sec': 'basal'}
basal

 HL23PVHL23SST 16 0.05 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 700, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.05, 'weight': 0.00033, 'delay': 0.5, 'synMech': 'HL23PVHL23SST', 'synsPerConn': 16, 'sec': 'basal'}
basal

 HL23PVHL23PV 15 0.37 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 710, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.37, 'weight': 0.00033, 'delay': 0.5, 'synMech': 'HL23PVHL23PV', 'synsPerConn': 15, 'sec': 'basal'}
basal

 HL23PVHL23VIP 7 0.03 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.26}
{'preConds': {'cellType': 'HL23PV'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.03, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23PVHL23VIP', 'synsPerConn': 7, 'sec': 'basal'}
basal

 HL23VIPHL23SST 9 0.35 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 760, 'Fac': 22, 'Use': 0.27}
{'preConds': {'cellType': 'HL23VIP'}, 'postConds': {'cellType': 'HL23SST'}, 'probability': 0.35, 'weight': 0.00036, 'delay': 0.5, 'synMech': 'HL23VIPHL23SST', 'synsPerConn': 9, 'sec': 'basal'}
basal

 HL23VIPHL23PV 11 0.1 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.25}
{'preConds': {'cellType': 'HL23VIP'}, 'postConds': {'cellType': 'HL23PV'}, 'probability': 0.1, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23VIPHL23PV', 'synsPerConn': 11, 'sec': 'basal'}
basal

 HL23VIPHL23VIP 7 0.05 2 ['dend']
{'mod': 'ProbGABAAB_EMS', 'tau_r_GABAA': 1, 'tau_d_GABAA': 10, 'Dep': 720, 'Fac': 21, 'Use': 0.26}
{'preConds': {'cellType': 'HL23VIP'}, 'postConds': {'cellType': 'HL23VIP'}, 'probability': 0.05, 'weight': 0.00034, 'delay': 0.5, 'synMech': 'HL23VIPHL23VIP', 'synsPerConn': 7, 'sec': 'basal'}
basal

Start time:  2024-08-24 17:10:20.420186

Creating network of 4 cell populations on 4 hosts...
  Number of cells on node 0: 1 
  Done; cell creation time = 0.31 s.
Making connections...
  Number of connections on node 0: 0 
  Done; cell connection time = 0.02 s.
Adding stims...
  Number of stims on node 0: 5 
  Done; cell stims creation time = 0.02 s.
Recording 1 traces of 1 types on node 0

 {'cellType': 'HL23PYR', 'cellModel': 'HH_full', 'pop': 'HL23PYR', 'xnorm': 0.65048060320456, 'ynorm': 0.31730232208239806, 'znorm': 0.42104209446381713, 'x': 162.62015080114, 'y': 1047.0976628719136, 'z': 105.26052361595428} nsec = 92
0.0s

Running simulation using NEURON for 2000.0 ms...
0.1s
0.2s
0.3s
0.4s
0.5s
0.6s
0.7s
0.8s
0.9s
1.0s
1.1s
1.2s
1.3s
1.4s
1.5s
1.6s
1.7s
1.8s
1.9s
2.0s
  Done; run time = 64.08 s; real-time ratio: 0.03.

Gathering data...
  Done; gather time = 0.29 s.

Analyzing...
  Cells: 4
  Connections: 5 (1.25 per cell)
  Synaptic contacts: 29 (7.25 per cell)
  Spikes: 40 (5.00 Hz)
  Simulated time: 2.0 s; 4 workers
  Run time: 64.08 s
   HL23PYR : 4.000 Hz
   HL23SST : 4.500 Hz
   HL23PV : 4.000 Hz
   HL23VIP : 7.500 Hz
Warning: data won't be saved. No output format specified (consider sim.cfg.savePickle, sim.cfg.saveJson etc.)
Plotting 2D representation of network cell locations and connections...
Preparing spike data...
Plotting raster...
Plotting 3D cell shape ...
Plotting recorded cell traces ... trace
  Done; plotting time = 9.64 s

Total time = 76.27 s
